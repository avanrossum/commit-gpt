name: PR Analysis

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history for range analysis
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install commit-gpt
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Set up API key
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
      if: secrets.OPENAI_API_KEY != ''
    
    - name: Analyze PR changes
      id: analyze
      run: |
        # Get the base and head commits
        BASE_SHA="${{ github.event.pull_request.base.sha }}"
        HEAD_SHA="${{ github.event.pull_request.head.sha }}"
        
        # Run commit-gpt analysis
        echo "Analyzing changes from $BASE_SHA to $HEAD_SHA"
        
        # Generate PR summary and risk assessment
        OUTPUT=$(commit-gpt --range "$BASE_SHA..$HEAD_SHA" --pr --risk-check --explain 2>&1)
        
        # Extract different parts of the output
        echo "output<<EOF" >> $GITHUB_OUTPUT
        echo "$OUTPUT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        # Check if there were any errors
        if echo "$OUTPUT" | grep -q "Error:"; then
          echo "error=true" >> $GITHUB_OUTPUT
        else
          echo "error=false" >> $GITHUB_OUTPUT
        fi
        
        # Extract risk score if present
        RISK_SCORE=$(echo "$OUTPUT" | grep -o "Risk Score: [0-9.]*" | head -1 | cut -d' ' -f3 || echo "0.0")
        echo "risk_score=$RISK_SCORE" >> $GITHUB_OUTPUT
        
        # Extract cost if present
        COST=$(echo "$OUTPUT" | grep -o "\$[0-9.]*" | head -1 || echo "$0.00")
        echo "cost=$COST" >> $GITHUB_OUTPUT
    
    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const output = `${{ steps.analyze.outputs.output }}`;
          const error = '${{ steps.analyze.outputs.error }}' === 'true';
          const riskScore = parseFloat('${{ steps.analyze.outputs.risk_score }}');
          const cost = '${{ steps.analyze.outputs.cost }}';
          
          let comment = '## 🤖 Commit-GPT Analysis\n\n';
          
          if (error) {
            comment += '❌ **Analysis failed**\n\n';
            comment += '```\n' + output + '\n```\n\n';
            comment += 'This could be due to:\n';
            comment += '- No API key configured\n';
            comment += '- Network issues\n';
            comment += '- Invalid git range\n';
          } else {
            comment += '✅ **Analysis completed**\n\n';
            
            // Add cost information
            comment += `💰 **Cost**: ${cost}\n\n`;
            
            // Add risk assessment
            if (riskScore >= 0.7) {
              comment += '🚨 **High Risk Detected**\n\n';
            } else if (riskScore >= 0.4) {
              comment += '⚠️ **Medium Risk Detected**\n\n';
            } else if (riskScore > 0) {
              comment += '🔍 **Low Risk Detected**\n\n';
            } else {
              comment += '✅ **No Significant Risks**\n\n';
            }
            
            // Add the full output
            comment += '<details>\n<summary>📋 Full Analysis</summary>\n\n';
            comment += '```\n' + output + '\n```\n';
            comment += '</details>\n\n';
            
            // Add recommendations
            comment += '### 💡 Recommendations\n\n';
            if (riskScore >= 0.7) {
              comment += '- **Review required**: High-risk changes detected\n';
              comment += '- Check for exposed secrets or destructive operations\n';
              comment += '- Consider breaking this into smaller, safer commits\n';
            } else if (riskScore >= 0.4) {
              comment += '- **Caution advised**: Medium-risk changes detected\n';
              comment += '- Review the changes carefully before merging\n';
            } else {
              comment += '- **Looks good**: Changes appear safe to merge\n';
              comment += '- Standard code review process applies\n';
            }
          }
          
          // Add footer
          comment += '\n---\n';
          comment += '*This analysis was generated by [Commit-GPT](https://github.com/your-org/commit-gpt)*\n';
          
          // Post comment
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
